version: "3.9"

services:
  web:
    container_name: django_rest_api_container
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn diploma_backend.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
    
  db:
    container_name: postgres_db_container
    image: postgres:alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ./.env.prod.db

  redis:
    container_name: redis_container
    image: "redis:alpine"
    expose:
      - 6379
    ports:
      - "6379:6379"
  
  celery_worker:
    container_name: celery_worker_container
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A diploma_backend worker -l info
    volumes:
      - .:/home/app/web
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
      - web
  
  nginx:
    container_name: nginx_container
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - ./nginx/:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

volumes:
  postgres_data:
  static_volume:
  media_volume: